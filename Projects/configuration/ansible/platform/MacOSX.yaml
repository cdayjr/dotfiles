# vi:syntax=yaml.ansible
---
- name: Update Homebrew
  community.general.homebrew:
    update_homebrew: yes
- name: Install "Development Tools" Homebrew equivalent package group
  community.general.homebrew:
    name:
      - diffstat
      - doxygen
      - gettext
      - git
      - gpatch
      - patchutils
    state: present
- name: Setup ascii-image-converter repository
  community.general.homebrew_tap:
    name: TheZoraiz/ascii-image-converter
    state: present
- name: Install Homebrew packages
  community.general.homebrew:
    name:
      - TheZoraiz/ascii-image-converter/ascii-image-converter
      - ansible-language-server
      - bash-language-server
      - bat
      - bottom
      - cmake
      - composer
      - curl
      - darcs
      - direnv
      - dockerfile-language-server
      - dust
      - eza
      - fd
      - fontforge
      - gh
      - gifski
      - gnupg
      - go
      - helix
      - helm-ls
      - hostess
      - imagemagick
      - jq
      - lesspipe
      - macvim
      - marksman
      - mas
      - mosh
      - mycli
      - node
      - opam
      - openssl
      - p7zip
      - pdm
      - php
      - pngquant
      - podman
      - procs
      - python
      - rclone
      - ripgrep
      - rsync
      - rust
      - sd
      - smimesign
      - speedtest-cli
      - sql-language-server
      - starship
      - terraform-ls
      - tmux
      - tokei
      - typescript-language-server
      - unar
      - vscode-langservers-extracted
      - watch
      - weechat
      - wget
      - yadm
      - yaml-language-server
      - zsh
    state: present
- name: Add brew zsh to /etc/shells (x86_64)
  become: true
  ansible.builtin.lineinfile:
    create: true
    name: /etc/shells
    line: /usr/local/bin/zsh
    state: present
  when: not apple_silicon
- name: Add brew zsh to /etc/shells (Apple Silicon)
  become: true
  ansible.builtin.lineinfile:
    create: true
    name: /etc/shells
    line: /opt/homebrew/bin/zsh
    state: present
  when: apple_silicon
- name: Set user shell (x86_64)
  become: true
  ansible.builtin.user:
    name: "{{ lookup('env','USER') }}"
    shell: /usr/local/bin/zsh
    state: present
  when: not apple_silicon
- name: Set user shell (Apple Silicon)
  become: true
  ansible.builtin.user:
    name: "{{ lookup('env','USER') }}"
    shell: /opt/homebrew/bin/zsh
    state: present
  when: apple_silicon
- name: Install Homebrew casks
  community.general.homebrew_cask:
    greedy: true
    name:
      - docker
      - doxygen
      - ente-auth
      - flux
      - imageoptim
      - joplin
      - keepassxc
      - latest
      - librewolf
      - powershell
      - rocket
      - sequel-ace
      - the-unarchiver
      - visual-studio-code
      - wezterm
      - xscreensaver
    state: present
    sudo_password: "{{ ansible_become_password }}"
- name: Install apps from the Mac App Store
  # disable this because it seems to be extremely slow
  when: false
  community.general.mas:
    id:
      - 1221250572 # Xnip - Screenshot & Annotation
      - 1295203466 # Windows App
      - 1497506650 # Yubico Authenticator
      - 1661733229 # LocalSend
      - 497799835 # Xcode
      - 640199958 # Apple Developer
    state: latest
- name: Home setup
  when: ansible_env.USER != "cday"
  block:
    - name: Update MacPorts
      become: true
      community.general.macports:
        selfupdate: true
    - name: Install home Homebrew casks
      community.general.homebrew_cask:
        greedy: true
        name:
          - betterdiscord-installer
          - discord
          - mactex
          - mounty
          - transmission-remote-gui
    - name: Setup pcloud repository
      community.general.homebrew_tap:
        name: lyraphase/pcloud
        state: present
    - name: Install pCloud
      community.general.homebrew_cask:
        name:
          - pcloud-drive
    - name: Install MacPorts packages
      become: true
      community.general.macports:
        name: "{{ item }}"
      vars:
        item:
          - NetSurf
    - name: Upgrade all MacPorts packages
      become: true
      community.general.macports:
        upgrade: true
- name: Home app store
  # disable this because it seems to be extremely slow
  when: ansible_env.USER != "cday" and false
  community.general.mas:
    id:
      - 1532597159 # Mp3tag
    state: latest
- name: Work setup
  when: ansible_env.USER == "cday"
  block:
    - name: Install work Homebrew casks
      community.general.homebrew_cask:
        greedy: true
        name:
          - cloudflare-warp
          - cyberduck
          - google-drive
          - lastpass
          - lifesize
          - microsoft-office
          - postman
          - zoom
    - name: Work configuration repo
      ansible.builtin.git:
        repo: "git@github.com:cdayjr/work-config"
        dest: "~/.local/src/work-config"
    - name: Work configuration link
      ansible.builtin.file:
        src: "~/.local/src/work-config"
        dest: "~/.local/share/includes/work-config"
        state: link
- name: Install fonts
  community.general.homebrew_cask:
    name:
      - font-arial
      - font-arial-black
      - font-atkinson-hyperlegible
      - font-cascadia-code
      - font-cascadia-mono
      - font-comic-neue
      - font-comic-sans-ms
      - font-courier-new
      - font-impact
      - font-inclusive-sans
      - font-jetbrains-mono-nerd-font
      - font-noto-color-emoji
      - font-noto-emoji
      - font-noto-mono
      - font-noto-sans
      - font-noto-serif
      - font-open-dyslexic
      - font-overpass
      - font-roboto
      - font-sauce-code-pro-nerd-font
      - font-source-sans-3
      - font-source-serif-4
      - font-times-new-roman
      - font-trebuchet-ms
      - font-verdana
    state: present
    sudo_password: "{{ ansible_become_password }}"
- name: Upgrade all casks
  community.general.homebrew_cask:
    greedy: true
    sudo_password: "{{ ansible_become_password }}"
    upgrade_all: true
- name: Upgrade remaining homebrew packages
  community.general.homebrew:
    upgrade_all: yes
- name: Install pip packages
  ansible.builtin.pip:
    name:
      - powerline-gitstatus
      - powerline-status
    state: latest
- name: Disable Microsoft Required Data Notice
  become: true
  community.general.osx_defaults:
    domain: /Library/Preferences/com.microsoft.autoupdate2
    key: AcknowledgedDataCollectionPolicy
    type: string
    value: RequiredDataOnly
    state: present
- name: Install personal fonts
  block:
    - name: Get font collection
      ansible.builtin.git:
        repo: git@github.com:cdayjr/fonts
        dest: ~/.local/src/fonts
        depth: 1
      register: personal_fonts_repo
    - name: Install personal fonts
      when: personal_fonts_repo.changed
      block:
        - name: Find all fonts
          ansible.builtin.find:
            paths:
              - ~/.local/src/fonts
            patterns:
              - "*.otf"
              - "*.ttf"
            recurse: true
            file_type: file
          register: personal_font_results
        - name: Install fonts
          when: personal_font_results.files|length > 0
          ansible.builtin.file:
            dest: "~/Library/Fonts/{{ item.path | basename }}"
            force: true
            src: "{{ item.path }}"
            state: hard
          loop: "{{ personal_font_results.files }}"

# vi:syntax=yaml.ansible
---
- name: Check linger for user
  when: not linux_desktop
  failed_when: false
  changed_when: false # command result is not a change
  ansible.builtin.shell:
    cmd: "loginctl show-user {{ ansible_user_id }} -p Linger | grep -q 'Linger=yes'"
  register: check_linger
- name: Enable linger for user
  when: (not linux_desktop) and (check_linger.rc != 0)
  become: true
  ansible.builtin.command:
    cmd: "loginctl enable-linger {{ ansible_user_id }}"
- name: Install distribution GPG keys
  become: true
  ansible.builtin.dnf:
    name: "distribution-gpg-keys"
    state: latest
- name: Install GPG keys
  become: true
  ansible.builtin.rpm_key:
    key: "{{ item }}"
    state: present
  loop:
    - "/usr/share/distribution-gpg-keys/rpmfusion/RPM-GPG-KEY-rpmfusion-free-fedora-{{ ansible_distribution_major_version }}-primary"
    - "/usr/share/distribution-gpg-keys/rpmfusion/RPM-GPG-KEY-rpmfusion-nonfree-fedora-{{ ansible_distribution_major_version }}"
    # GitHub CLI Repo
    - "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xc99b11deb97541f0"
    - "https://copr-be.cloud.fedoraproject.org/results/cdayjr/yadm/pubkey.gpg"
    - "https://keybase.io/docs/server_security/code_signing_key.asc"
    - "https://repo.linrunner.de/fedora/tlp/repos/RPM-GPG-KEY-tlp-fedora-{{ ansible_distribution_major_version }}-primary"
- name: Install YADM repo
  become: yes
  ansible.builtin.command: "dnf copr enable -y cdayjr/yadm"
  args:
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:cdayjr:yadm.repo
    warn: false
- name: Install RPMFusion (free)
  become: true
  ansible.builtin.dnf:
    name: "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
- name: Install RPMFusion (nonfree)
  when: linux_desktop
  become: true
  ansible.builtin.dnf:
    name: "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
- name: Install GitHub CLI repo
  become: true
  ansible.builtin.command:
    cmd: "dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo"
  args:
    creates: "/etc/yum.repos.d/gh-cli.repo"
    warn: false
- name: Install "Development Tools" DNF package group
  become: true
  ansible.builtin.dnf:
    name: "@Development Tools"
    state: present
- name: Install appstream-data for rpmfusion packages
  when: linux_desktop
  become: true
  ansible.builtin.dnf:
    name: "@core"
    state: present
- name: Install multimedia plugins from RPMFusion
  when: linux_desktop
  become: true
  ansible.builtin.dnf:
    name: "@multimedia"
    state: present
    install_weak_deps: false
    exclude: PackageKit-gstreamer-plugin
- name: Install sound and video complement packages from RPMFusion
  when: linux_desktop
  become: true
  ansible.builtin.dnf:
    name: "@sound-and-video"
    state: present
- name: Install tainted rpmfusion packages
  when: linux_desktop
  become: true
  ansible.builtin.dnf:
    name: rpmfusion-free-release-tainted
    state: present
- name: Install CLI packages
  become: true
  ansible.builtin.dnf:
    name:
      - ImageMagick
      - bat
      - bc
      - cargo
      - ccze
      - composer
      - curl
      - exa
      - exfat-utils
      - fd-find
      - fuse-exfat
      - gh
      - golang
      - jq
      - mosh
      - mycli
      - nmap
      - nodejs
      - p7zip
      - php
      - php-bcmath
      - php-cli
      - php-devel
      - php-json
      - php-mbstring
      - powerline
      - procs
      - python3-github3py
      - rclone
      - ripgrep
      - rsync
      - rust
      - tmux-powerline
      - tokei
      - unar
      - vim
      - vim-powerline
      - weechat
      - wget
      - yadm
      - youtube-dl
      - zsh
    state: present
- name: Set user shell
  become: true
  ansible.builtin.user:
    name: "{{ lookup('env','USER') }}"
    shell: /usr/bin/zsh
    state: present
- name: bottom Repo
  become: true
  ansible.builtin.command: "dnf copr enable -y atim/bottom"
  args:
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:atim:bottom.repo
    warn: false
  when: ansible_distribution_major_version | int >= 32
  register: bottom_repo
- name: Install bottom from bottom repo
  become: true
  ansible.builtin.dnf:
    name:
      - bottom
    state: present
  when: bottom_repo is not skipped
- name: Install server packages
  when: not linux_desktop
  become: true
  ansible.builtin.dnf:
    name:
      - cockpit
      - cockpit-pcp
      - openssh-server
    state: present
- name: Install desktop packages
  when: linux_desktop
  become: true
  ansible.builtin.dnf:
    name:
      - calibre
      - chromium
      - chromium-libs-media-freeworld
      - discord
      - feh
      - firefox
      - flac123
      - gimp
      - gnome-tweaks
      - gvfs-smb
      - i3
      - i3lock
      - i3status
      - i3status
      - keepassxc
      - kitty
      - konsole
      - lm_sensors
      - mpv
      - pandoc
      - pinta
      - powerline-fonts
      - python3-streamlink
      - redshift-gtk
      - remmina
      - rxvt-unicode
      - steam
      - sway
      - synergy
      - tlp
      - tlp-rdw
      - transmission-remote-gtk
      - trash-cli
      - vlc
      - wl-clipboard
      - xsel
    state: present
- name: Keybase Repo
  become: true
  ansible.builtin.dnf:
    name: "https://prerelease.keybase.io/keybase_amd64.rpm"
    state: present
- name: Keybase setup for workstation
  when: linux_desktop
  ansible.builtin.command:
    cmd: keybase ctl autostart --enable
  register: keybase_result
  changed_when: "keybase_result.stdout != ''"
- name: Keybase setup for server
  when: not linux_desktop
  block:
    - name: Initialize keybase variables
      ansible.builtin.command:
        cmd: keybase ctl init
      args:
        creates: "{{ ansible_env.XDG_CONFIG_HOME | default('~/.config') }}/keybase/keybase.autogen.env"
    - name: Start keybase services
      ansible.builtin.systemd:
        scope: user
        enabled: true
        state: started
        name: "{{ item }}"
      loop:
        - keybase.service
        - kbfs.service
        - keybase-redirector.service
- name: ThinkPad battery tools
  when: thinkpad
  block:
    - name: Install ThinkPad repo
      become: true
      ansible.builtin.dnf:
        name: "https://repo.linrunner.de/fedora/tlp/repos/releases/tlp-release.fc{{ ansible_distribution_major_version }}.noarch.rpm"
        state: present
    - name: Install ThinkPad packages
      become: true
      ansible.builtin.dnf:
        name:
          - akmod-tp_smapi
          - akmod-acpi_call
          - kernel-devel
        state: present
- name: Install media packages
  become: yes
  ansible.builtin.dnf:
    name:
      - flac123
      - libdvdcss
    state: present
# Fonts
- name: Install base font packages
  when: linux_desktop
  become: true
  ansible.builtin.dnf:
    name:
      - adobe-source-code-pro-fonts
      - adobe-source-sans-pro-fonts
      - adobe-source-serif-pro-fonts
      - bitstream-vera-fonts-all
      - cascadia-code-fonts
      - cascadia-mono-fonts
      - comic-neue-angular-fonts
      - comic-neue-fonts
      - dejavu-fonts-all
      - fontawesome-fonts
      - google-android-emoji-fonts
      - google-arimo-fonts
      - google-carlito-fonts
      - google-cousine-fonts
      - google-droid-sans-fonts
      - google-droid-sans-mono-fonts
      - google-droid-serif-fonts
      - google-go-fonts
      - google-go-mono-fonts
      - google-go-smallcaps-fonts
      - google-noto-emoji-color-fonts
      - google-noto-emoji-fonts
      - google-noto-music-fonts
      - google-noto-sans-fonts
      - google-noto-sans-mono-fonts
      - google-noto-serif-fonts
      - google-roboto-condensed-fonts
      - google-roboto-fonts
      - google-roboto-mono-fonts
      - google-roboto-slab-fonts
      - google-rubik-fonts
      - google-tinos-fonts
      - grimmer-proggy-squaresz-fonts
      - grimmer-proggy-tinysz-fonts
      - ibm-plex-fonts-all
      - jetbrains-mono-fonts-all
      - lato-fonts
      - liberation-mono-fonts
      - mscore-fonts-all
      - opendyslexic-fonts
      - overpass-fonts
      - overpass-mono-fonts
      - twitter-twemoji-fonts
      - ubuntu-title-fonts
      - unifont-fonts
      - wine-arial-fonts
      - wine-courier-fonts
      - wine-fixedsys-fonts
      - wine-fonts
      - wine-marlett-fonts
      - wine-ms-sans-serif-fonts
      - wine-small-fonts
      - wine-symbol-fonts
      - wine-system-fonts
      - wine-tahoma-fonts
      - wine-times-new-roman-fonts
      - wine-webdings-fonts
      - wine-wingdings-fonts
    state: present
- name: Fedora Beter Fonts Repo
  become: true
  ansible.builtin.command: "dnf copr enable -y dawid/better_fonts"
  args:
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:dawid:better_fonts.repo
    warn: false
  when: linux_desktop and (ansible_distribution_major_version | int >= 32)
  register: better_fonts_repo
- name: Install fonts from better fonts repo
  become: true
  ansible.builtin.dnf:
    name:
      - courier-prime-fonts
      - ubuntu-fonts
    state: present
  when: better_fonts_repo is not skipped
- name: Fira Code Fonts Repo
  when: linux_desktop and (ansible_distribution_major_version | int >= 32)
  become: true
  ansible.builtin.command: "dnf copr enable -y cyfrost/packages"
  args:
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:cyfrost:packages.repo
    warn: false
  register: cyfrost_packages_repo
- name: Install fonts from cyfrost packages
  become: true
  ansible.builtin.dnf:
    name:
      - fira-code-fonts
    state: present
  when: cyfrost_packages_repo is not skipped
- name: Manual Font Installation
  when: linux_desktop
  block:
    - name: Create local fonts diectory
      ansible.builtin.file:
        path: ~/.local/share/fonts
        state: directory
    - name: Install manual fonts
      include_tasks: "{{ ansible_distribution }}/fonts/{{ font_item }}.yaml"
      loop:
        - "3270"
        - fixedsys_excelsior
        - nerd_fonts
      loop_control:
        loop_var: font_item
    - name: Collect new font installations
      ansible.builtin.set_fact:
        new_font_installs:
          - "{{ font_3270_installed.changed }}"
          - "{{ font_fixedsys_excelsior_installed.changed }}"
          - "{{ font_nerd_fonts_installed.changed }}"
    - name: Reload font cache
      when: "True in new_font_installs"
      ansible.builtin.command: "fc-cache -f"
# Fedora final upgrades & cleanup
- name: Upgrade all DNF pacakges
  become: true
  ansible.builtin.dnf:
    name: "*"
    state: latest
- name: Autoremove unneeded packages installed as dependencies
  become: true
  ansible.builtin.dnf:
    autoremove: true
    skip_broken: true
    update_cache: true
- name: Install cargo packages
  ansible.builtin.command:
    cmd: "cargo install {{ item.package }}"
    creates: "~/.cargo/bin/{{ item.bin }}"
  loop:
    - package: sd
      bin: sd
    - package: du-dust
      bin: dust
- name: Install cargo update tool
  ansible.builtin.command:
    cmd: cargo install cargo-update
    creates: ~/.cargo/bin/cargo-install-update
- name: Update cargo packages
  ansible.builtin.command:
    cmd: cargo install-update --all
  register: cargo_update
  changed_when: cargo_update.stdout.find('No packages need updating.') == -1
- name: Enable cockpit service
  when: not linux_desktop
  become: true
  ansible.builtin.service:
    name: cockpit.socket
    enabled: true
  notify:
    - restart_cockpit
- name: Enable pcp services
  when: not linux_desktop
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
  loop:
    - pmcd
    - pmlogger
  notify:
    - restart_pcp
- name: Configure sshd
  when: not linux_desktop
  block:
    - name: Enable sshd service
      become: true
      ansible.builtin.service:
        name: sshd
        enabled: true
      notify:
        - restart_sshd
    - name: Enable password login
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication yes"
      notify:
        - restart_sshd
    - name: Disable root password login
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: "^#?PermitRootLogin"
        line: "PermitRootLogin without-password"
      notify:
        - restart_sshd
- name: Configure firewalld
  block:
    - name: Enable firewalld service
      become: true
      ansible.builtin.service:
        name: firewalld
        enabled: true
      notify:
        - restart_firewalld
    - name: Enable ssh over firewall
      when: not linux_desktop
      become: true
      ansible.posix.firewalld:
        zone: public
        service: ssh
        permanent: yes
        state: enabled
      notify:
        - restart_firewalld
    - name: Enable mosh over firewall
      when: not linux_desktop
      become: true
      ansible.posix.firewalld:
        zone: public
        service: mosh
        permanent: yes
        state: enabled
      notify:
        - restart_firewalld
    - name: Enable cockpit over firewall
      when: not linux_desktop
      become: true
      ansible.posix.firewalld:
        zone: public
        service: cockpit
        permanent: yes
        state: enabled
      notify:
        - restart_firewalld

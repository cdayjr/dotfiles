# vi:syntax=yaml.ansible
---
- name: Environment Setup
  hosts: posix
  gather_facts: true
  become: false
  environment:
    # ensure local bin is in path
    PATH: "{{ ansible_env.PATH }}:/home/{{ ansible_user_id }}/.local/bin"
  vars:
    apple_silicon: "{{ (ansible_distribution == 'MacOSX') and (ansible_architecture == 'arm64') }}"
    linux_desktop: "{{ ('XDG_CURRENT_DESKTOP' in ansible_env) and (ansible_env.XDG_CURRENT_DESKTOP|length > 0) }}"
    thinkpad: "{{ ansible_product_version is regex('ThinkPad') }}"
  handlers:
    - name: restart_cockpit
      become: true
      ansible.builtin.service:
        name: cockpit
        state: restarted
    - name: restart_firewalld
      become: true
      ansible.builtin.service:
        name: firewalld
        state: restarted
    - name: restart_pcp
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
      loop:
        - pmcd
        - pmlogger
    - name: restart_sshd
      become: true
      ansible.builtin.service:
        name: sshd
        state: restarted
    - name: restart_tlp
      become: true
      ansible.builtin.service:
        name: tlp
        state: restarted
  tasks:
    - name: >-
        become test - if this stalls you need to update your
        ansible_become_password in your ansible hosts file
        (probably at ~/.config/ansible/hosts)
      ansible.builtin.shell:
        cmd: echo All is ash. Goddamn dirt in your mouth
      become: true
      changed_when: false
    - name: Install and configure platform specific settings
      include_tasks: "platform/{{ ansible_distribution }}.yaml"
    # Language package manager content, should be managed by a package config
    # file for contents rather than managed here
    - name: Register npm major version
      ansible.builtin.shell:
        cmd: |
          npm --version | awk 'BEGIN { FS = "." } ; { print $1 }'
      register: npm_version
      changed_when: false
      failed_when: npm_version.stdout == ""
    - name: NPM configuration (globalconfig) (versions <7)
      include_tasks: "npm/globalconfig.yaml"
      when: npm_version.stdout | int < 7
    - name: NPM configuration (userconfig) (versions 7+)
      include_tasks: "npm/userconfig.yaml"
      when: npm_version.stdout | int >= 7
    - name: Update composer packages
      # composer requires a modern amount of memory to update,
      # so only run on systems with 2gb or more
      when: ansible_memtotal_mb >= 2048
      community.general.composer:
        no_dev: false
        command: update
        global_command: true
      environment:
        COMPOSER_HOME: "{{ ansible_env.HOME }}/.config/composer"
    - name: Install pip packages on current python
      when: ansible_python.version.major >= 3 and ansible_python.version.minor >= 12
      ansible.builtin.pip:
        name:
          - git-filter-repo
          - hyfetch
          - python-lsp-server[all]
          - yt-dlp
        extra_args: --user --break-system-packages
        state: latest
    - name: Install pip packages on slightly less current python
      when: ansible_python.version.major >= 3 and ansible_python.version.minor < 12
      ansible.builtin.pip:
        name:
          - git-filter-repo
          - hyfetch
          - python-lsp-server[all]
          - yt-dlp
        extra_args: --user
        state: latest
    - name: Install pip packages on older machines
      when: ansible_python.version.major < 3
      ansible.builtin.pip:
        name:
          - git-filter-repo
          - hyfetch
          - pyside2
          - python-lsp-server[all]
        extra_args: --user
        state: latest
      vars:
        ansible_python_interpreter: /usr/bin/env python3
    - name: package sources
      ansible.builtin.git:
        repo: https://github.com/{{ item.owner }}/{{ item.repo }}
        dest: ~/.local/src/{{ item.repo }}
        depth: 1
        force: true # disregard local changes
      loop:
        - owner: muennich
          repo: urxvt-perls
    - name: tmux plugins
      ansible.builtin.git:
        repo: https://github.com/{{ item.owner }}/{{ item.repo }}
        dest: ~/.tmux/plugins/{{ item.repo }}
        depth: 1
        force: true # disregard local changes
      loop:
        - owner: tmux-plugins
          repo: tmux-sensible
        - owner: tmux-plugins
          repo: tpm
    - name: vim plugins
      ansible.builtin.git:
        repo: https://github.com/{{ item.owner }}/{{ item.repo }}
        dest: ~/.vim/pack/git-plugins/start/{{ item.repo }}
        depth: 1
        force: true # disregard local changes
      loop:
        - owner: adelarsq
          repo: vim-matchit
        - owner: cespare
          repo: vim-toml
        - owner: chrisbra
          repo: csv.vim
        - owner: dense-analysis
          repo: ale
        - owner: editorconfig
          repo: editorconfig-vim
        - owner: fatih
          repo: vim-go
        - owner: flazz
          repo: vim-colorschemes
        - owner: fpob
          repo: nette.vim
        - owner: idanarye
          repo: vim-vebugger
        - owner: imsnif
          repo: kdl.vim
        - owner: leafgarland
          repo: typescript-vim
        - owner: lumiliet
          repo: vim-twig
        - owner: martinda
          repo: jenkinsfile-vim-syntax
        - owner: mattn
          repo: emmet-vim
        - owner: pearofducks
          repo: ansible-vim
        - owner: plasticboy
          repo: vim-markdown
        - owner: quramy
          repo: tsuquyomi
        - owner: rust-lang
          repo: rust.vim
        - owner: ryanoasis
          repo: vim-devicons
        - owner: scrooloose
          repo: nerdtree
        - owner: shougo
          repo: vimproc.vim
        - owner: towolf
          repo: vim-helm
        - owner: tpope
          repo: vim-fugitive
        - owner: tpope
          repo: vim-liquid
        - owner: tpope
          repo: vim-sensible
- name: Media server setup
  hosts: media_server
  gather_facts: false
  become: false
  handlers:
    - name: restart_plex
      become: true
      ansible.builtin.service:
        name: plexmediaserver
        state: restarted
    - name: restart_transmission
      become: true
      ansible.builtin.service:
        name: transmission-daemon
        state: restarted
    - name: restart_firewalld
      become: true
      ansible.builtin.service:
        name: firewalld
        state: restarted
  tasks:
    - name: Add Plex Yum repo
      become: true
      ansible.builtin.yum_repository:
        name: plex
        description: Plex Yum Repository
        baseurl: https://downloads.plex.tv/repo/rpm/$basearch/
        gpgkey: https://downloads.plex.tv/plex-keys/PlexSign.key
        gpgcheck: true
    - name: Install media server packages
      become: true
      ansible.builtin.dnf:
        name:
          - plexmediaserver
          - transmission-daemon
        state: latest
    - name: Enable plex over firewall
      become: true
      ansible.posix.firewalld:
        zone: public
        service: plex
        permanent: yes
        state: enabled
      notify: restart_firewalld
    - name: Enable transmission over firewall
      become: true
      ansible.posix.firewalld:
        zone: public
        service: transmission-client
        permanent: yes
        state: enabled
      notify: restart_firewalld
    - name: Enable plex service
      become: true
      ansible.builtin.service:
        name: plexmediaserver
        enabled: true
      notify: restart_plex
    - name: Enable transmission daemon
      become: true
      ansible.builtin.service:
        name: transmission-daemon
        enabled: true
      notify: restart_transmission
